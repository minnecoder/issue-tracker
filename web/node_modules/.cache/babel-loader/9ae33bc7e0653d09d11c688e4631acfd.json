{"ast":null,"code":"export default function DateDiff(oldDate) {\n  const date1 = new Date(oldDate).getTime();\n  const date2 = new Date(); // return minutes\n\n  let minutes = Math.floor((date2 - date1) / 60000);\n\n  if (minutes < 60) {\n    return `${minutes} minutes ago`;\n  } // if minutes > 60  return hours\n\n\n  let hours = Math.floor((date2 - date1) / (60000 * 60));\n\n  if (hours < 24) {\n    return `${hours} hours ago`;\n  } // if hours > 24 return days\n\n\n  let days = Math.floor((date2 - date1) / (60000 * 60 * 24));\n\n  if (days < 30) {\n    return `${days} days ago`;\n  } // if days > 30 return months\n\n\n  let months = Math.floor((date2 - date1) / (60000 * 60 * 24 * 12));\n\n  if (months < 12) {\n    return `${months} months ago`;\n  } // if months > 12 return years\n\n\n  let years = Math.floor((date2 - date1) / (60000 * 60 * 24 * 12 * 12));\n  return years;\n}","map":{"version":3,"sources":["C:/Users/Sean/Documents/Web Projects/issue-tracker/web/src/helpers/DateDiff.js"],"names":["DateDiff","oldDate","date1","Date","getTime","date2","minutes","Math","floor","hours","days","months","years"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;AACtC,QAAMC,KAAK,GAAG,IAAIC,IAAJ,CAASF,OAAT,EAAkBG,OAAlB,EAAd;AACA,QAAMC,KAAK,GAAG,IAAIF,IAAJ,EAAd,CAFsC,CAItC;;AACA,MAAIG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACH,KAAK,GAAGH,KAAT,IAAkB,KAA7B,CAAd;;AACA,MAAII,OAAO,GAAG,EAAd,EAAkB;AACd,WAAQ,GAAEA,OAAQ,cAAlB;AACH,GARqC,CAStC;;;AACA,MAAIG,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACH,KAAK,GAAGH,KAAT,KAAmB,QAAQ,EAA3B,CAAX,CAAZ;;AACA,MAAIO,KAAK,GAAG,EAAZ,EAAgB;AACZ,WAAQ,GAAEA,KAAM,YAAhB;AACH,GAbqC,CActC;;;AACA,MAAIC,IAAI,GAAGH,IAAI,CAACC,KAAL,CAAW,CAACH,KAAK,GAAGH,KAAT,KAAmB,QAAQ,EAAR,GAAa,EAAhC,CAAX,CAAX;;AACA,MAAIQ,IAAI,GAAG,EAAX,EAAe;AACX,WAAQ,GAAEA,IAAK,WAAf;AACH,GAlBqC,CAmBtC;;;AACA,MAAIC,MAAM,GAAGJ,IAAI,CAACC,KAAL,CAAW,CAACH,KAAK,GAAGH,KAAT,KAAmB,QAAQ,EAAR,GAAa,EAAb,GAAkB,EAArC,CAAX,CAAb;;AACA,MAAIS,MAAM,GAAG,EAAb,EAAiB;AACb,WAAQ,GAAEA,MAAO,aAAjB;AACH,GAvBqC,CAwBtC;;;AACA,MAAIC,KAAK,GAAGL,IAAI,CAACC,KAAL,CAAW,CAACH,KAAK,GAAGH,KAAT,KAAmB,QAAQ,EAAR,GAAa,EAAb,GAAkB,EAAlB,GAAuB,EAA1C,CAAX,CAAZ;AACA,SAAOU,KAAP;AACH","sourcesContent":["export default function DateDiff(oldDate) {\r\n    const date1 = new Date(oldDate).getTime();\r\n    const date2 = new Date();\r\n\r\n    // return minutes\r\n    let minutes = Math.floor((date2 - date1) / 60000)\r\n    if (minutes < 60) {\r\n        return `${minutes} minutes ago`\r\n    }\r\n    // if minutes > 60  return hours\r\n    let hours = Math.floor((date2 - date1) / (60000 * 60));\r\n    if (hours < 24) {\r\n        return `${hours} hours ago`\r\n    }\r\n    // if hours > 24 return days\r\n    let days = Math.floor((date2 - date1) / (60000 * 60 * 24))\r\n    if (days < 30) {\r\n        return `${days} days ago`\r\n    }\r\n    // if days > 30 return months\r\n    let months = Math.floor((date2 - date1) / (60000 * 60 * 24 * 12))\r\n    if (months < 12) {\r\n        return `${months} months ago`\r\n    }\r\n    // if months > 12 return years\r\n    let years = Math.floor((date2 - date1) / (60000 * 60 * 24 * 12 * 12))\r\n    return years\r\n}"]},"metadata":{},"sourceType":"module"}