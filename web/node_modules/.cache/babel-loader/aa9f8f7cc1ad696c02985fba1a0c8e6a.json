{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean\\\\Documents\\\\Web Projects\\\\issue-tracker\\\\web\\\\src\\\\components\\\\TicketNotes.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport DateDiff from \"../helpers/DateDiff\";\nexport default function TicketNotes(data) {\n  // const [notes, updateNotes] = useState([])\n  // useEffect(() => {\n  //   async function fetchNotes() {\n  //     updateNotes(data.data.ticketComment)\n  //     updateNotes(data.data.ticketHistory)\n  //   }\n  //   fetchNotes()\n  //   notes.sort((a, b) => a.createdAt - b.createdAt)\n  // }, [])\n  const notes = [];\n\n  for (let i = 0; i < data.data.ticketComment.length; i++) {\n    notes.push(data.data.ticketComment[i]);\n  }\n\n  for (let i = 0; i < data.data.ticketHistory.length; i++) {\n    notes.push(data.data.ticketHistory[i]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, console.log(notes), notes.map(note => {\n    if ('comment' in note) {\n      return /*#__PURE__*/React.createElement(TicketComment, {\n        key: note._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, note.user, ' ', \"commented\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }\n      }, DateDiff(note.created))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, note.comment));\n    }\n\n    if ('oldValue' in note) {\n      return /*#__PURE__*/React.createElement(TicketChange, {\n        key: note._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, note.user, ' ', \"changed\", ' ', note.propertyChanged, ' ', \"from\", ' ', note.oldValue, ' ', \"to\", ' ', note.newValue, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }\n      }, DateDiff(note.created))));\n    }\n\n    return null;\n  }));\n}\nconst TicketChange = styled.div`\ndisplay: flex;\njustify-content: space-between;\nbackground: #E7F3FD;\nmargin: .5rem;\npadding: .5rem;\n\nspan {\n  padding-top: .25rem;\n  padding-left: .25rem;\n    font-size: 12px;\n    color: #B2B9BE; \n}\n`;\nconst TicketComment = styled.div`\ndisplay: flex;\nflex-direction: column;\npadding: .5rem;\n\ndiv {\n   \n    padding: .5rem;\n    background: #E7F3FD;\n}\nspan {\n  padding-top: .25rem;\n    font-size: 12px;\n    color: #B2B9BE; \n}\np {\n    margin-top: .25rem;\n    padding: .75rem;\n    border-left: solid 1px #ccc;\n}\n`;","map":{"version":3,"sources":["C:/Users/Sean/Documents/Web Projects/issue-tracker/web/src/components/TicketNotes.js"],"names":["React","useEffect","useState","styled","DateDiff","TicketNotes","data","notes","i","ticketComment","length","push","ticketHistory","console","log","map","note","_id","user","created","comment","propertyChanged","oldValue","newValue","TicketChange","div","TicketComment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,KAAK,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACA,IAAL,CAAUG,aAAV,CAAwBC,MAA5C,EAAoDF,CAAC,EAArD,EAAyD;AACvDD,IAAAA,KAAK,CAACI,IAAN,CAAWL,IAAI,CAACA,IAAL,CAAUG,aAAV,CAAwBD,CAAxB,CAAX;AACD;;AACD,OAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACA,IAAL,CAAUM,aAAV,CAAwBF,MAA5C,EAAoDF,CAAC,EAArD,EAAyD;AACvDD,IAAAA,KAAK,CAACI,IAAN,CAAWL,IAAI,CAACA,IAAL,CAAUM,aAAV,CAAwBJ,CAAxB,CAAX;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,OAAO,CAACC,GAAR,CAAYP,KAAZ,CADH,EAEGA,KAAK,CACHQ,GADF,CACOC,IAAI,IAAI;AACZ,QAAI,aAAaA,IAAjB,EAAuB;AACrB,0BACE,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAEA,IAAI,CAACC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACE,IADR,EAEG,GAFH,eAIG,GAJH,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGd,QAAQ,CACPY,IAAI,CAACG,OADE,CAFX,CALF,CADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,IAAI,CAACI,OADR,CAbF,CADF;AAmBD;;AACD,QAAI,cAAcJ,IAAlB,EAAwB;AACtB,0BACE,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACE,IADR,EAEG,GAFH,aAIG,GAJH,EAKGF,IAAI,CAACK,eALR,EAMG,GANH,UAQG,GARH,EASGL,IAAI,CAACM,QATR,EAUG,GAVH,QAYG,GAZH,EAaGN,IAAI,CAACO,QAbR,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGnB,QAAQ,CACPY,IAAI,CAACG,OADE,CADX,CAdF,CADF,CADF;AAyBD;;AACD,WAAO,IAAP;AACD,GAnDF,CAFH,CADF;AA0DD;AAED,MAAMK,YAAY,GAAGrB,MAAM,CAACsB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,MAAMC,aAAa,GAAGvB,MAAM,CAACsB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport DateDiff from \"../helpers/DateDiff\"\r\n\r\nexport default function TicketNotes(data) {\r\n  // const [notes, updateNotes] = useState([])\r\n  // useEffect(() => {\r\n  //   async function fetchNotes() {\r\n  //     updateNotes(data.data.ticketComment)\r\n  //     updateNotes(data.data.ticketHistory)\r\n  //   }\r\n  //   fetchNotes()\r\n  //   notes.sort((a, b) => a.createdAt - b.createdAt)\r\n  // }, [])\r\n  const notes = []\r\n  for (let i = 0; i < data.data.ticketComment.length; i++) {\r\n    notes.push(data.data.ticketComment[i])\r\n  }\r\n  for (let i = 0; i < data.data.ticketHistory.length; i++) {\r\n    notes.push(data.data.ticketHistory[i])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {console.log(notes)}\r\n      {notes\r\n        .map((note => {\r\n          if ('comment' in note) {\r\n            return (\r\n              <TicketComment key={note._id}>\r\n                <div>\r\n                  {note.user}\r\n                  {' '}\r\n                  commented\r\n                  {' '}\r\n                  <span>\r\n\r\n                    {DateDiff(\r\n                      note.created,\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <p>\r\n                  {note.comment}\r\n                </p>\r\n              </TicketComment>\r\n            );\r\n          }\r\n          if ('oldValue' in note) {\r\n            return (\r\n              <TicketChange key={note._id}>\r\n                <p>\r\n                  {note.user}\r\n                  {' '}\r\n                  changed\r\n                  {' '}\r\n                  {note.propertyChanged}\r\n                  {' '}\r\n                  from\r\n                  {' '}\r\n                  {note.oldValue}\r\n                  {' '}\r\n                  to\r\n                  {' '}\r\n                  {note.newValue}\r\n                  <span>\r\n                    {DateDiff(\r\n                      note.created,\r\n                    )}\r\n                  </span>\r\n                </p>\r\n\r\n              </TicketChange>\r\n            );\r\n          }\r\n          return null;\r\n        }))}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst TicketChange = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nbackground: #E7F3FD;\r\nmargin: .5rem;\r\npadding: .5rem;\r\n\r\nspan {\r\n  padding-top: .25rem;\r\n  padding-left: .25rem;\r\n    font-size: 12px;\r\n    color: #B2B9BE; \r\n}\r\n`;\r\n\r\nconst TicketComment = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\npadding: .5rem;\r\n\r\ndiv {\r\n   \r\n    padding: .5rem;\r\n    background: #E7F3FD;\r\n}\r\nspan {\r\n  padding-top: .25rem;\r\n    font-size: 12px;\r\n    color: #B2B9BE; \r\n}\r\np {\r\n    margin-top: .25rem;\r\n    padding: .75rem;\r\n    border-left: solid 1px #ccc;\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}