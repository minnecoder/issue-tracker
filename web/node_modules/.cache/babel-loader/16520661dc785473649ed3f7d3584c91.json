{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean\\\\Documents\\\\Web Projects\\\\issue-tracker\\\\web\\\\src\\\\components\\\\TicketNotes.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport DateDiff from \"../helpers/DateDiff\";\nexport default function TicketDetails(id) {\n  const [notes, updateNotes] = useState([]);\n  useEffect(() => {\n    async function fetchNotes() {\n      const commentResponse = await fetch(\"/api/v1/ticketcomments\");\n      const commentjson = await commentResponse.json();\n      updateNotes(commentjson.data);\n      const historyResponse = await fetch(\"/api/v1/tickethistorys\");\n      const historyjson = await historyResponse.json();\n      updateNotes(historyjson.data);\n    }\n\n    fetchNotes();\n    notes.sort((a, b) => a.createdAt - b.createdAt);\n  }, []);\n  const TicketItems = [{\n    user: 'Jane Smith',\n    propertyChanged: 'Ticket Status',\n    oldValue: 'Open',\n    newValue: 'Resolved',\n    createdAt: '11/2/2020'\n  }, {\n    commenter: 'John Doe',\n    comment: 'This one thing would be a great idea',\n    createdAt: '4/1/2020'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, console.log(notes), TicketItems.map(ticketItem => {\n    if ('comment' in ticketItem) {\n      return /*#__PURE__*/React.createElement(TicketComment, {\n        key: ticketItem.commenter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, ticketItem.commenter, ' ', \"commented\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }\n      }, DateDiff(ticketItem.createdAt))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, ticketItem.comment));\n    }\n\n    if ('oldValue' in ticketItem) {\n      return /*#__PURE__*/React.createElement(TicketChange, {\n        key: ticketItem.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, ticketItem.user, ' ', \"changed\", ' ', ticketItem.propertyChanged, ' ', \"from\", ' ', ticketItem.oldValue, ' ', \"to\", ' ', ticketItem.newValue, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      }, DateDiff(ticketItem.createdAt))));\n    }\n\n    return null;\n  }));\n}\nconst TicketChange = styled.div`\ndisplay: flex;\njustify-content: space-between;\nbackground: #E7F3FD;\nmargin: .5rem;\npadding: .5rem;\n\nspan {\n  padding-top: .25rem;\n  padding-left: .25rem;\n    font-size: 12px;\n    color: #B2B9BE; \n}\n`;\nconst TicketComment = styled.div`\ndisplay: flex;\nflex-direction: column;\npadding: .5rem;\n\ndiv {\n   \n    padding: .5rem;\n    background: #E7F3FD;\n}\nspan {\n  padding-top: .25rem;\n    font-size: 12px;\n    color: #B2B9BE; \n}\np {\n    margin-top: .25rem;\n    padding: .75rem;\n    border-left: solid 1px #ccc;\n}\n`;","map":{"version":3,"sources":["C:/Users/Sean/Documents/Web Projects/issue-tracker/web/src/components/TicketNotes.js"],"names":["React","useEffect","useState","styled","DateDiff","TicketDetails","id","notes","updateNotes","fetchNotes","commentResponse","fetch","commentjson","json","data","historyResponse","historyjson","sort","a","b","createdAt","TicketItems","user","propertyChanged","oldValue","newValue","commenter","comment","console","log","map","ticketItem","TicketChange","div","TicketComment"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport DateDiff from \"../helpers/DateDiff\"\r\n\r\nexport default function TicketDetails(id) {\r\n  const [notes, updateNotes] = useState([])\r\n  useEffect(() => {\r\n    async function fetchNotes() {\r\n      const commentResponse = await fetch(\"/api/v1/ticketcomments\")\r\n      const commentjson = await commentResponse.json()\r\n      updateNotes(commentjson.data)\r\n      const historyResponse = await fetch(\"/api/v1/tickethistorys\")\r\n      const historyjson = await historyResponse.json()\r\n      updateNotes(historyjson.data)\r\n    }\r\n    fetchNotes()\r\n    notes.sort((a, b) => a.createdAt - b.createdAt)\r\n  }, [])\r\n\r\n  const TicketItems = [\r\n    {\r\n      user: 'Jane Smith',\r\n      propertyChanged: 'Ticket Status',\r\n      oldValue: 'Open',\r\n      newValue: 'Resolved',\r\n      createdAt: '11/2/2020',\r\n    },\r\n    {\r\n      commenter: 'John Doe',\r\n      comment: 'This one thing would be a great idea',\r\n      createdAt: '4/1/2020',\r\n    },\r\n\r\n  ];\r\n  return (\r\n    <div>\r\n      {console.log(notes)}\r\n      {TicketItems\r\n        .map((ticketItem) => {\r\n          if ('comment' in ticketItem) {\r\n            return (\r\n              <TicketComment key={ticketItem.commenter}>\r\n                <div>\r\n                  {ticketItem.commenter}\r\n                  {' '}\r\n                  commented\r\n                  {' '}\r\n                  <span>\r\n\r\n                    {DateDiff(\r\n                      ticketItem.createdAt,\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <p>\r\n                  {ticketItem.comment}\r\n                </p>\r\n              </TicketComment>\r\n            );\r\n          }\r\n          if ('oldValue' in ticketItem) {\r\n            return (\r\n              <TicketChange key={ticketItem.user}>\r\n                <p>\r\n                  {ticketItem.user}\r\n                  {' '}\r\n                  changed\r\n                  {' '}\r\n                  {ticketItem.propertyChanged}\r\n                  {' '}\r\n                  from\r\n                  {' '}\r\n                  {ticketItem.oldValue}\r\n                  {' '}\r\n                  to\r\n                  {' '}\r\n                  {ticketItem.newValue}\r\n                  <span>\r\n                    {DateDiff(\r\n                      ticketItem.createdAt,\r\n                    )}\r\n                  </span>\r\n                </p>\r\n\r\n              </TicketChange>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst TicketChange = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nbackground: #E7F3FD;\r\nmargin: .5rem;\r\npadding: .5rem;\r\n\r\nspan {\r\n  padding-top: .25rem;\r\n  padding-left: .25rem;\r\n    font-size: 12px;\r\n    color: #B2B9BE; \r\n}\r\n`;\r\n\r\nconst TicketComment = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\npadding: .5rem;\r\n\r\ndiv {\r\n   \r\n    padding: .5rem;\r\n    background: #E7F3FD;\r\n}\r\nspan {\r\n  padding-top: .25rem;\r\n    font-size: 12px;\r\n    color: #B2B9BE; \r\n}\r\np {\r\n    margin-top: .25rem;\r\n    padding: .75rem;\r\n    border-left: solid 1px #ccc;\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}